{"ast":null,"code":"var _jsxFileName = \"/Users/kim/\\u110C\\u1173\\u11AF\\u1100\\u1167\\u110E\\u1161\\u11BD\\u1100\\u1175/study/\\u110B\\u1172\\u1103\\u1166\\u1106\\u1175/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/context/Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useReducer, createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalcContext = /*#__PURE__*/createContext();\nconst CalcDispatchContext = /*#__PURE__*/createContext();\nconst CalcProvider = _ref => {\n  let {\n    Children\n  } = _ref;\n  const initState = {\n    a: 1,\n    b: 2,\n    result: 3\n  };\n  const reducer = ((prev, _ref2) => {\n    let {\n      type,\n      payload\n    } = _ref2;\n    switch (type) {\n      case 'change':\n        {\n          const {\n            name,\n            value\n          } = payload;\n          return {\n            ...prev,\n            [name]: value\n          };\n        }\n      case 'add':\n        {\n          return {\n            ...prev,\n            result: prev.a + prev.b\n          };\n        }\n      case 'minus':\n        {\n          return {\n            ...prev,\n            result: prev.a - prev.b\n          };\n        }\n      case 'divide':\n        {\n          return {\n            ...prev,\n            result: prev.a / prev.b\n          };\n        }\n      case 'multiply':\n        {\n          return {\n            ...prev,\n            result: prev.a * prev.b\n          };\n        }\n      default:\n        throw new Error('operator is invalid');\n    }\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(CalcContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(CalcDispatchContext.Provider, {\n      value: dispatch,\n      children: Children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = CalcProvider;\nconst useCalc = () => {\n  _s();\n  useContext(CalcContext);\n};\n_s(useCalc, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst useCalcDispatch = () => {\n  _s2();\n  useContext(CalcDispatchContext);\n};\n_s2(useCalcDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { CalcProvider, useCalc, useCalcDispatch };\nvar _c;\n$RefreshReg$(_c, \"CalcProvider\");","map":{"version":3,"names":["useReducer","createContext","useContext","jsxDEV","_jsxDEV","CalcContext","CalcDispatchContext","CalcProvider","_ref","Children","initState","a","b","result","reducer","prev","_ref2","type","payload","name","value","Error","Provider","state","children","dispatch","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCalc","_s","useCalcDispatch","_s2","$RefreshReg$"],"sources":["/Users/kim/즐겨찾기/study/유데미/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/context/Context.js"],"sourcesContent":["import { useReducer, createContext, useContext } from 'react';\n\nconst CalcContext = createContext();\nconst CalcDispatchContext = createContext();\n\nconst CalcProvider = ({ Children }) => {\n  const initState = {\n    a: 1,\n    b: 2,\n    result: 3,\n  };\n  const reducer =\n    ((prev, { type, payload }) => {\n      switch (type) {\n        case 'change': {\n          const { name, value } = payload;\n          return { ...prev, [name]: value };\n        }\n        case 'add': {\n          return { ...prev, result: prev.a + prev.b };\n        }\n        case 'minus': {\n          return { ...prev, result: prev.a - prev.b };\n        }\n        case 'divide': {\n          return { ...prev, result: prev.a / prev.b };\n        }\n        case 'multiply': {\n          return { ...prev, result: prev.a * prev.b };\n        }\n        default:\n          throw new Error('operator is invalid');\n      }\n    },\n    0);\n\n  return (\n    <CalcContext.Provider value={state}>\n      <CalcDispatchContext.Provider value={dispatch}>\n        {Children}\n      </CalcDispatchContext.Provider>\n    </CalcContext.Provider>\n  );\n};\n\nconst useCalc = () => {\n  useContext(CalcContext);\n};\n\nconst useCalcDispatch = () => {\n  useContext(CalcDispatchContext);\n};\n\nexport { CalcProvider, useCalc, useCalcDispatch };\n"],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AACnC,MAAMK,mBAAmB,gBAAGL,aAAa,CAAC,CAAC;AAE3C,MAAMM,YAAY,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EAChC,MAAME,SAAS,GAAG;IAChBC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJC,MAAM,EAAE;EACV,CAAC;EACD,MAAMC,OAAO,IACV,CAACC,IAAI,EAAAC,KAAA,KAAwB;IAAA,IAAtB;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAAF,KAAA;IACvB,QAAQC,IAAI;MACV,KAAK,QAAQ;QAAE;UACb,MAAM;YAAEE,IAAI;YAAEC;UAAM,CAAC,GAAGF,OAAO;UAC/B,OAAO;YAAE,GAAGH,IAAI;YAAE,CAACI,IAAI,GAAGC;UAAM,CAAC;QACnC;MACA,KAAK,KAAK;QAAE;UACV,OAAO;YAAE,GAAGL,IAAI;YAAEF,MAAM,EAAEE,IAAI,CAACJ,CAAC,GAAGI,IAAI,CAACH;UAAE,CAAC;QAC7C;MACA,KAAK,OAAO;QAAE;UACZ,OAAO;YAAE,GAAGG,IAAI;YAAEF,MAAM,EAAEE,IAAI,CAACJ,CAAC,GAAGI,IAAI,CAACH;UAAE,CAAC;QAC7C;MACA,KAAK,QAAQ;QAAE;UACb,OAAO;YAAE,GAAGG,IAAI;YAAEF,MAAM,EAAEE,IAAI,CAACJ,CAAC,GAAGI,IAAI,CAACH;UAAE,CAAC;QAC7C;MACA,KAAK,UAAU;QAAE;UACf,OAAO;YAAE,GAAGG,IAAI;YAAEF,MAAM,EAAEE,IAAI,CAACJ,CAAC,GAAGI,IAAI,CAACH;UAAE,CAAC;QAC7C;MACA;QACE,MAAM,IAAIS,KAAK,CAAC,qBAAqB,CAAC;IAC1C;EACF,CAAC,EACD,CAAC,CAAC;EAEJ,oBACEjB,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACF,KAAK,EAAEG,KAAM;IAAAC,QAAA,eACjCpB,OAAA,CAACE,mBAAmB,CAACgB,QAAQ;MAACF,KAAK,EAAEK,QAAS;MAAAD,QAAA,EAC3Cf;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACmB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAE3B,CAAC;AAACC,EAAA,GAtCIvB,YAAY;AAwClB,MAAMwB,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB9B,UAAU,CAACG,WAAW,CAAC;AACzB,CAAC;AAAC2B,EAAA,CAFID,OAAO;AAIb,MAAME,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5BhC,UAAU,CAACI,mBAAmB,CAAC;AACjC,CAAC;AAAC4B,GAAA,CAFID,eAAe;AAIrB,SAAS1B,YAAY,EAAEwB,OAAO,EAAEE,eAAe;AAAG,IAAAH,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}