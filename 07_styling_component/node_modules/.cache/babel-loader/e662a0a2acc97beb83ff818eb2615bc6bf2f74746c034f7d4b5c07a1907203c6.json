{"ast":null,"code":"var _jsxFileName = \"/Users/kim/\\u110C\\u1173\\u11AF\\u1100\\u1167\\u110E\\u1161\\u11BD\\u1100\\u1175/study/\\u110B\\u1172\\u1103\\u1166\\u1106\\u1175/react-guide-material/07_styling_component/src/050_chakra_ui/start/components/Form.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { HStack, Input, Button, useToast } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    createTodo\n  } = _ref;\n  const [enteredTodo, setEnteredTodo] = useState('');\n  const toast = useToast();\n  const addTodo = e => {\n    e.preventDefault();\n    if (!enteredTodo) {\n      toast({\n        title: '新しいタスクを入力してください',\n        status: 'error',\n        duration: 2000,\n        isClosable: true\n      });\n      return;\n    }\n    const newTodo = {\n      id: Math.floor(Math.random() * 1e5),\n      content: enteredTodo\n    };\n    createTodo(newTodo);\n    setEnteredTodo('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTodo,\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: enteredTodo,\n        onChange: e => setEnteredTodo(e.target.value),\n        size: \"ld\"\n        // p={3}\n        ,\n        variant: \"flushed\",\n        placeholder: \"\\u65B0\\u3057\\u3044\\u30BF\\u30B9\\u30AF\",\n        _placeholder: {\n          opacity: '0.3',\n          color: 'gray.500'\n        },\n        bgColor: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        type: \"submit\",\n        colorScheme: \"blue\",\n        variant: \"outline\",\n        bgColor: \"white\",\n        px: 7,\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"8xmoXyG4DbsNDHbt4ifJpa8Y22Y=\", false, function () {\n  return [useToast];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","HStack","Input","Button","useToast","jsxDEV","_jsxDEV","Form","_ref","_s","createTodo","enteredTodo","setEnteredTodo","toast","addTodo","e","preventDefault","title","status","duration","isClosable","newTodo","id","Math","floor","random","content","onSubmit","children","type","value","onChange","target","size","variant","placeholder","_placeholder","opacity","color","bgColor","fileName","_jsxFileName","lineNumber","columnNumber","width","colorScheme","px","_c","$RefreshReg$"],"sources":["/Users/kim/즐겨찾기/study/유데미/react-guide-material/07_styling_component/src/050_chakra_ui/start/components/Form.js"],"sourcesContent":["import { useState } from 'react';\nimport { HStack, Input, Button, useToast } from '@chakra-ui/react';\nconst Form = ({ createTodo }) => {\n  const [enteredTodo, setEnteredTodo] = useState('');\n\n  const toast = useToast();\n\n  const addTodo = e => {\n    e.preventDefault();\n\n    if (!enteredTodo) {\n      toast({\n        title: '新しいタスクを入力してください',\n        status: 'error',\n        duration: 2000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    const newTodo = {\n      id: Math.floor(Math.random() * 1e5),\n      content: enteredTodo,\n    };\n\n    createTodo(newTodo);\n\n    setEnteredTodo('');\n  };\n  return (\n    <form onSubmit={addTodo}>\n      <HStack>\n        <Input\n          type='text'\n          value={enteredTodo}\n          onChange={e => setEnteredTodo(e.target.value)}\n          size='ld'\n          // p={3}\n          variant='flushed'\n          placeholder='新しいタスク'\n          _placeholder={{ opacity: '0.3', color: 'gray.500' }}\n          bgColor='white'\n        />\n        <Button\n          width='100%'\n          type='submit'\n          colorScheme='blue'\n          variant='outline'\n          bgColor='white'\n          px={7}\n        >\n          追加\n        </Button>\n      </HStack>\n    </form>\n  );\n};\n\nexport default Form;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnE,MAAMC,IAAI,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAC1B,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMa,KAAK,GAAGT,QAAQ,CAAC,CAAC;EAExB,MAAMU,OAAO,GAAGC,CAAC,IAAI;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACL,WAAW,EAAE;MAChBE,KAAK,CAAC;QACJI,KAAK,EAAE,iBAAiB;QACxBC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CAAC;MACF;IACF;IAEA,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MACnCC,OAAO,EAAEf;IACX,CAAC;IAEDD,UAAU,CAACW,OAAO,CAAC;IAEnBT,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EACD,oBACEN,OAAA;IAAMqB,QAAQ,EAAEb,OAAQ;IAAAc,QAAA,eACtBtB,OAAA,CAACL,MAAM;MAAA2B,QAAA,gBACLtB,OAAA,CAACJ,KAAK;QACJ2B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,WAAY;QACnBoB,QAAQ,EAAEhB,CAAC,IAAIH,cAAc,CAACG,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC9CG,IAAI,EAAC;QACL;QAAA;QACAC,OAAO,EAAC,SAAS;QACjBC,WAAW,EAAC,sCAAQ;QACpBC,YAAY,EAAE;UAAEC,OAAO,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAW,CAAE;QACpDC,OAAO,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACFrC,OAAA,CAACH,MAAM;QACLyC,KAAK,EAAC,MAAM;QACZf,IAAI,EAAC,QAAQ;QACbgB,WAAW,EAAC,MAAM;QAClBX,OAAO,EAAC,SAAS;QACjBK,OAAO,EAAC,OAAO;QACfO,EAAE,EAAE,CAAE;QAAAlB,QAAA,EACP;MAED;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAClC,EAAA,CAtDIF,IAAI;EAAA,QAGMH,QAAQ;AAAA;AAAA2C,EAAA,GAHlBxC,IAAI;AAwDV,eAAeA,IAAI;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}