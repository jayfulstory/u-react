{"ast":null,"code":"var _jsxFileName = \"/Users/kim/\\u110C\\u1173\\u11AF\\u1100\\u1167\\u110E\\u1161\\u11BD\\u1100\\u1175/study/\\u110B\\u1172\\u1103\\u1166\\u1106\\u1175/react-guide-material/06_control_and_form/src/110_multi_checkbox/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [fruits, setFruits] = useState([{\n    label: 'Apple',\n    value: 100,\n    checked: false\n  }, {\n    label: 'Banana',\n    value: 200,\n    checked: false\n  }, {\n    label: 'Cherry',\n    value: 300,\n    checked: false\n  }]);\n  const [sum, setSum] = useState(0);\n  const sumHandler = e => {\n    const newFruits = fruits.map(fruit => {\n      const newFruit = {\n        ...fruit\n      };\n      if (newFruit.label === e.target.value) {\n        newFruit.checked = !fruit.checked;\n      }\n      return newFruit;\n    });\n    setFruits(newFruits);\n    let sumVal = 0;\n    // newFruits.forEach(fruit => {\n    //   if (fruit.checked === true) {\n    //     sumVal += fruit.value;\n    //   }\n    // });\n    // newFruits\n    //   .filter(fruit => fruit.checked)\n    //   .forEach(fruit => (sumVal += fruit.value));\n    newFruits.filter(fruit => fruit.checked).reduce((sumVal, fruit) => sumVal + fruit.value, 0);\n    setSum(sumVal);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [fruits.map(fruit => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: fruit.label,\n          checked: fruit.checked,\n          onChange: sumHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), fruit.label, \": \", fruit.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, fruit.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u5408\\u8A08\\uFF1A\", sum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"JOIdXG/Tj3e5UmOxkX/y4uCrzzI=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Example","_s","fruits","setFruits","label","value","checked","sum","setSum","sumHandler","e","newFruits","map","fruit","newFruit","target","sumVal","filter","reduce","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kim/즐겨찾기/study/유데미/react-guide-material/06_control_and_form/src/110_multi_checkbox/start/Example.js"],"sourcesContent":["import { useState } from 'react';\n\nconst Example = () => {\n  const [fruits, setFruits] = useState([\n    { label: 'Apple', value: 100, checked: false },\n    { label: 'Banana', value: 200, checked: false },\n    { label: 'Cherry', value: 300, checked: false },\n  ]);\n\n  const [sum, setSum] = useState(0);\n\n  const sumHandler = e => {\n    const newFruits = fruits.map(fruit => {\n      const newFruit = { ...fruit };\n      if (newFruit.label === e.target.value) {\n        newFruit.checked = !fruit.checked;\n      }\n      return newFruit;\n    });\n    setFruits(newFruits);\n\n    let sumVal = 0;\n    // newFruits.forEach(fruit => {\n    //   if (fruit.checked === true) {\n    //     sumVal += fruit.value;\n    //   }\n    // });\n    // newFruits\n    //   .filter(fruit => fruit.checked)\n    //   .forEach(fruit => (sumVal += fruit.value));\n    newFruits\n      .filter(fruit => fruit.checked)\n      .reduce((sumVal, fruit) => sumVal + fruit.value, 0);\n\n    setSum(sumVal);\n  };\n  return (\n    <div>\n      {fruits.map(fruit => (\n        <div key={fruit.label}>\n          <label>\n            <input\n              type='checkbox'\n              value={fruit.label}\n              checked={fruit.checked}\n              onChange={sumHandler}\n            />\n            {fruit.label}: {fruit.value}\n          </label>\n        </div>\n      ))}\n      <div>合計：{sum}</div>\n    </div>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CACnC;IAAEO,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC9C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC/C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,CAChD,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMY,UAAU,GAAGC,CAAC,IAAI;IACtB,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAG,CAACC,KAAK,IAAI;MACpC,MAAMC,QAAQ,GAAG;QAAE,GAAGD;MAAM,CAAC;MAC7B,IAAIC,QAAQ,CAACV,KAAK,KAAKM,CAAC,CAACK,MAAM,CAACV,KAAK,EAAE;QACrCS,QAAQ,CAACR,OAAO,GAAG,CAACO,KAAK,CAACP,OAAO;MACnC;MACA,OAAOQ,QAAQ;IACjB,CAAC,CAAC;IACFX,SAAS,CAACQ,SAAS,CAAC;IAEpB,IAAIK,MAAM,GAAG,CAAC;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAL,SAAS,CACNM,MAAM,CAACJ,KAAK,IAAIA,KAAK,CAACP,OAAO,CAAC,CAC9BY,MAAM,CAAC,CAACF,MAAM,EAAEH,KAAK,KAAKG,MAAM,GAAGH,KAAK,CAACR,KAAK,EAAE,CAAC,CAAC;IAErDG,MAAM,CAACQ,MAAM,CAAC;EAChB,CAAC;EACD,oBACEjB,OAAA;IAAAoB,QAAA,GACGjB,MAAM,CAACU,GAAG,CAACC,KAAK,iBACfd,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UACEqB,IAAI,EAAC,UAAU;UACff,KAAK,EAAEQ,KAAK,CAACT,KAAM;UACnBE,OAAO,EAAEO,KAAK,CAACP,OAAQ;UACvBe,QAAQ,EAAEZ;QAAW;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,EACDZ,KAAK,CAACT,KAAK,EAAC,IAAE,EAACS,KAAK,CAACR,KAAK;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC,GATAZ,KAAK,CAACT,KAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUhB,CACN,CAAC,eACF1B,OAAA;MAAAoB,QAAA,GAAK,oBAAG,EAACZ,GAAG;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACxB,EAAA,CApDID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAsDb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}