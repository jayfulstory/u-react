{"ast":null,"code":"var _jsxFileName = \"/Users/kim/\\u110C\\u1173\\u11AF\\u1100\\u1167\\u110E\\u1161\\u11BD\\u1100\\u1175/study/\\u110B\\u1172\\u1103\\u1166\\u1106\\u1175/react-guide-material/05_state_and_event/src/064_state_array/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const numArray = [1, 2, 3, 4, 5];\n  const [nums, setNums] = useState(numArray);\n  // 배열의 요소를 랜덤하게 섞는 함수\n  const shuffleArray = () => {\n    const shuffledArray = [...nums]; // 현재 배열 복사\n    let currentIndex = nums.length;\n\n    // 배열의 요소를 랜덤하게 섞음\n    while (0 !== currentIndex) {\n      const randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // console.log(randomIndex);\n      // console.log(currentIndex);\n\n      const temporaryValue = shuffledArray[currentIndex];\n      shuffledArray[currentIndex] = shuffledArray[randomIndex];\n      shuffledArray[randomIndex] = temporaryValue;\n    }\n\n    // 새로운 배열로 상태를 업데이트\n    setNums(shuffledArray);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: nums\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleArray,\n      children: \"suffle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"YfyrXRP8RBkBkTN0+Lirw5GiHW4=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","numArray","nums","setNums","shuffleArray","shuffledArray","currentIndex","length","randomIndex","Math","floor","random","temporaryValue","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kim/즐겨찾기/study/유데미/react-guide-material/05_state_and_event/src/064_state_array/start/Example.js"],"sourcesContent":["import { useState } from 'react';\nconst Example = () => {\n  const numArray = [1, 2, 3, 4, 5];\n  const [nums, setNums] = useState(numArray);\n  // 배열의 요소를 랜덤하게 섞는 함수\n  const shuffleArray = () => {\n    const shuffledArray = [...nums]; // 현재 배열 복사\n    let currentIndex = nums.length;\n\n    // 배열의 요소를 랜덤하게 섞음\n    while (0 !== currentIndex) {\n      const randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // console.log(randomIndex);\n      // console.log(currentIndex);\n\n      const temporaryValue = shuffledArray[currentIndex];\n      shuffledArray[currentIndex] = shuffledArray[randomIndex];\n      shuffledArray[randomIndex] = temporaryValue;\n    }\n\n    // 새로운 배열로 상태를 업데이트\n    setNums(shuffledArray);\n  };\n  return (\n    <>\n      <h1>{nums}</h1>\n      <button onClick={shuffleArray}>suffle</button>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACO,QAAQ,CAAC;EAC1C;EACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,aAAa,GAAG,CAAC,GAAGH,IAAI,CAAC,CAAC,CAAC;IACjC,IAAII,YAAY,GAAGJ,IAAI,CAACK,MAAM;;IAE9B;IACA,OAAO,CAAC,KAAKD,YAAY,EAAE;MACzB,MAAME,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,YAAY,CAAC;MAC5DA,YAAY,IAAI,CAAC;MACjB;MACA;;MAEA,MAAMM,cAAc,GAAGP,aAAa,CAACC,YAAY,CAAC;MAClDD,aAAa,CAACC,YAAY,CAAC,GAAGD,aAAa,CAACG,WAAW,CAAC;MACxDH,aAAa,CAACG,WAAW,CAAC,GAAGI,cAAc;IAC7C;;IAEA;IACAT,OAAO,CAACE,aAAa,CAAC;EACxB,CAAC;EACD,oBACET,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAKX;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfrB,OAAA;MAAQsB,OAAO,EAAEd,YAAa;MAAAS,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC9C,CAAC;AAEP,CAAC;AAACjB,EAAA,CA7BID,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}