{"ast":null,"code":"// import { createContext, useContext, useReducer } from 'react';\n\n// const CounterContext = createContext();\n// const CounterDispatchContext = createContext();\n\n// const reducer = (prev, { type, step }) => {\n//   switch (type) {\n//     case '+':\n//       return prev + step;\n//     case '-':\n//       return prev - step;\n//     default:\n//       throw new Error('不明なactionです。');\n//   }\n// };\n\n// const CounterProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, 0);\n//   return (\n//     <CounterContext.Provider value={state}>\n//       <CounterDispatchContext.Provider value={dispatch}>\n//         {children}\n//       </CounterDispatchContext.Provider>\n//     </CounterContext.Provider>\n//   );\n// };\n\n// const useCounter = () => {\n//   return useContext(CounterContext);\n// };\n\n// const useCounterDispatch = () => {\n//   return useContext(CounterDispatchContext);\n// };\n\n// export { CounterProvider, useCounter, useCounterDispatch };","map":{"version":3,"names":[],"sources":["/Users/kim/즐겨찾기/study/유데미/react-guide-material/13_redux/start/src/010_redux_no_rtk/context/CounterContext.js"],"sourcesContent":["// import { createContext, useContext, useReducer } from 'react';\n\n// const CounterContext = createContext();\n// const CounterDispatchContext = createContext();\n\n// const reducer = (prev, { type, step }) => {\n//   switch (type) {\n//     case '+':\n//       return prev + step;\n//     case '-':\n//       return prev - step;\n//     default:\n//       throw new Error('不明なactionです。');\n//   }\n// };\n\n// const CounterProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(reducer, 0);\n//   return (\n//     <CounterContext.Provider value={state}>\n//       <CounterDispatchContext.Provider value={dispatch}>\n//         {children}\n//       </CounterDispatchContext.Provider>\n//     </CounterContext.Provider>\n//   );\n// };\n\n// const useCounter = () => {\n//   return useContext(CounterContext);\n// };\n\n// const useCounterDispatch = () => {\n//   return useContext(CounterDispatchContext);\n// };\n\n// export { CounterProvider, useCounter, useCounterDispatch };\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}