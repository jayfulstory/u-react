{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { asyncCount } from '../../api/counter';\nconst counter = createSlice({\n  name: 'counter',\n  initialState: {\n    count: 0\n  },\n  reducers: {\n    add(state, _ref) {\n      let {\n        type,\n        payload\n      } = _ref;\n      state.count = state.count + payload;\n      // const newState = { ...state };\n      // newState.count = state.count + payload\n      // return newState;\n    },\n\n    minus(state, _ref2) {\n      let {\n        type,\n        payload\n      } = _ref2;\n      state.count = state.count - payload;\n      // const newState = { ...state };\n      // newState.count = state.count - payload\n      // return newState;\n    }\n  }\n});\n\nconst {\n  add,\n  minus\n} = counter.actions;\nconst addAsync = payload => {\n  return async (dispatch, getState) => {\n    console.log(payload);\n    const response = await asyncCount(payload);\n    console.log(response);\n    dispatch(add(response.data));\n  };\n};\nexport { add, minus, addAsync };\nexport default counter.reducer;","map":{"version":3,"names":["createSlice","asyncCount","counter","name","initialState","count","reducers","add","state","_ref","type","payload","minus","_ref2","actions","addAsync","dispatch","getState","console","log","response","data","reducer"],"sources":["/Users/kim/즐겨찾기/study/유데미/react-guide-material/13_redux/start/src/050_redux_thunk/store/modules/counter.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { asyncCount } from '../../api/counter';\n\nconst counter = createSlice({\n  name: 'counter',\n  initialState: {\n    count: 0,\n  },\n  reducers: {\n    add(state, { type, payload }) {\n      state.count = state.count + payload;\n      // const newState = { ...state };\n      // newState.count = state.count + payload\n      // return newState;\n    },\n    minus(state, { type, payload }) {\n      state.count = state.count - payload;\n      // const newState = { ...state };\n      // newState.count = state.count - payload\n      // return newState;\n    },\n  },\n});\n\nconst { add, minus } = counter.actions;\n\nconst addAsync = payload => {\n  return async (dispatch, getState) => {\n    console.log(payload);\n    const response = await asyncCount(payload);\n    console.log(response);\n    dispatch(add(response.data));\n  };\n};\n\nexport { add, minus, addAsync };\nexport default counter.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,mBAAmB;AAE9C,MAAMC,OAAO,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,GAAGA,CAACC,KAAK,EAAAC,IAAA,EAAqB;MAAA,IAAnB;QAAEC,IAAI;QAAEC;MAAQ,CAAC,GAAAF,IAAA;MAC1BD,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,GAAGM,OAAO;MACnC;MACA;MACA;IACF,CAAC;;IACDC,KAAKA,CAACJ,KAAK,EAAAK,KAAA,EAAqB;MAAA,IAAnB;QAAEH,IAAI;QAAEC;MAAQ,CAAC,GAAAE,KAAA;MAC5BL,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,GAAGM,OAAO;MACnC;MACA;MACA;IACF;EACF;AACF,CAAC,CAAC;;AAEF,MAAM;EAAEJ,GAAG;EAAEK;AAAM,CAAC,GAAGV,OAAO,CAACY,OAAO;AAEtC,MAAMC,QAAQ,GAAGJ,OAAO,IAAI;EAC1B,OAAO,OAAOK,QAAQ,EAAEC,QAAQ,KAAK;IACnCC,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;IACpB,MAAMS,QAAQ,GAAG,MAAMnB,UAAU,CAACU,OAAO,CAAC;IAC1CO,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;IACrBJ,QAAQ,CAACT,GAAG,CAACa,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC9B,CAAC;AACH,CAAC;AAED,SAASd,GAAG,EAAEK,KAAK,EAAEG,QAAQ;AAC7B,eAAeb,OAAO,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}