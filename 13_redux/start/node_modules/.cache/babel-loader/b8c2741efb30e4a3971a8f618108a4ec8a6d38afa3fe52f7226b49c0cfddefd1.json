{"ast":null,"code":"import { createSlice } from '@reduxkjs/toolkit';\ncreateSlice({\n  name: 'counter',\n  initialState: 0,\n  reducers: {\n    add(state, _ref) {\n      let {\n        type,\n        payload\n      } = _ref;\n      console.log(type, payload);\n      return state + payload;\n    },\n    minus(state, _ref2) {\n      let {\n        type,\n        payload\n      } = _ref2;\n      console.log(type, payload);\n      return state - payload;\n    }\n  }\n});\nconst initialState = 0;\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case 'counter/+':\n      return state + payload;\n    case 'counter/-':\n      return state - payload;\n    default:\n      return state;\n  }\n};\nconst add = payload => {\n  return {\n    type: 'counter/+',\n    payload\n  };\n};\nconst minus = payload => {\n  return {\n    type: 'counter/-',\n    payload\n  };\n};\nexport { reducer, add, minus };","map":{"version":3,"names":["createSlice","name","initialState","reducers","add","state","_ref","type","payload","console","log","minus","_ref2","reducer","arguments","length","undefined"],"sources":["/Users/kim/즐겨찾기/study/유데미/react-guide-material/13_redux/start/src/030_redux_toolkit/store/modules/counter.js"],"sourcesContent":["import { createSlice } from '@reduxkjs/toolkit';\n\ncreateSlice({\n  name: 'counter',\n  initialState: 0,\n  reducers: {\n    add(state, { type, payload }) {\n      console.log(type, payload);\n      return state + payload;\n    },\n    minus(state, { type, payload }) {\n      console.log(type, payload);\n      return state - payload;\n    },\n  },\n});\n\nconst initialState = 0;\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'counter/+':\n      return state + payload;\n    case 'counter/-':\n      return state - payload;\n    default:\n      return state;\n  }\n};\n\nconst add = payload => {\n  return {\n    type: 'counter/+',\n    payload,\n  };\n};\n\nconst minus = payload => {\n  return {\n    type: 'counter/-',\n    payload,\n  };\n};\n\nexport { reducer, add, minus };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,mBAAmB;AAE/CA,WAAW,CAAC;EACVC,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE,CAAC;EACfC,QAAQ,EAAE;IACRC,GAAGA,CAACC,KAAK,EAAAC,IAAA,EAAqB;MAAA,IAAnB;QAAEC,IAAI;QAAEC;MAAQ,CAAC,GAAAF,IAAA;MAC1BG,OAAO,CAACC,GAAG,CAACH,IAAI,EAAEC,OAAO,CAAC;MAC1B,OAAOH,KAAK,GAAGG,OAAO;IACxB,CAAC;IACDG,KAAKA,CAACN,KAAK,EAAAO,KAAA,EAAqB;MAAA,IAAnB;QAAEL,IAAI;QAAEC;MAAQ,CAAC,GAAAI,KAAA;MAC5BH,OAAO,CAACC,GAAG,CAACH,IAAI,EAAEC,OAAO,CAAC;MAC1B,OAAOH,KAAK,GAAGG,OAAO;IACxB;EACF;AACF,CAAC,CAAC;AAEF,MAAMN,YAAY,GAAG,CAAC;AAEtB,MAAMW,OAAO,GAAG,SAAAA,CAAA,EAA6C;EAAA,IAA5CR,KAAK,GAAAS,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGZ,YAAY;EAAA,IAAE;IAAEK,IAAI;IAAEC;EAAQ,CAAC,GAAAM,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQT,IAAI;IACV,KAAK,WAAW;MACd,OAAOF,KAAK,GAAGG,OAAO;IACxB,KAAK,WAAW;MACd,OAAOH,KAAK,GAAGG,OAAO;IACxB;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,MAAMD,GAAG,GAAGI,OAAO,IAAI;EACrB,OAAO;IACLD,IAAI,EAAE,WAAW;IACjBC;EACF,CAAC;AACH,CAAC;AAED,MAAMG,KAAK,GAAGH,OAAO,IAAI;EACvB,OAAO;IACLD,IAAI,EAAE,WAAW;IACjBC;EACF,CAAC;AACH,CAAC;AAED,SAASK,OAAO,EAAET,GAAG,EAAEO,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}